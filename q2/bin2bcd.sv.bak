module bin2bcd (
  input logic [3:0] binary,
  input logic [15:0] N,M,P,R,Q, //add the access the specific column value in the table for each MUX
  output logic [3:0] bcd,
  output logic carry
);

//Version 1 - use 5 16:1 MUXES; each column is the logic input of the MUX and the desire number for the BSC conversion is the MUX select signals that are the same for all MUXES

assign N = 16'b1010101010101010;
assign M = 16'b0011000011001100;
assign P = 16'b1100000011110000;
assign R = 16'b0000001100000000;
assign Q = 16'b1111110000000000;

assign bcd[0] = N[binary];
assign bcd[1] = M[binary];
assign bcd[2] = P[binary];
assign bcd[3] = R[binary];
assign carry = Q[binary];

//Version 2 - achieves the intended result but does NOT 'have' the 16:1 MUXES : 
/*always_comb begin 
  carry = 1'b0;
  carry = (binary > 9) ? 1 : 
          (binary <= 9) ? 0 : 1'bx;
end

always_comb begin 
  bcd = 4'b0000;
  bcd = (carry == 1) ? (binary - 4'b1010) : 
        (carry == 0) ? binary : 4'bxxxx;
end*/

endmodule
